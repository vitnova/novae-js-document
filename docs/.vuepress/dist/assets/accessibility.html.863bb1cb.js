import{_ as t,r as p,o as e,c as o,b as n,d as s,e as c,w as l,a as i}from"./app.89bfc664.js";const u={},r=n("h1",{id:"无障碍及适老化改造",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#无障碍及适老化改造","aria-hidden":"true"},"#"),s(" 无障碍及适老化改造")],-1),k=n("h2",{id:"开启方法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开启方法","aria-hidden":"true"},"#"),s(" 开启方法")],-1),d=n("code",null,"Novae.init",-1),v=n("code",null,"accessibility: true",-1),m=n("a",{href:"#getvoice"},[n("code",null,"getVoice")],-1),b=i(`<h3 id="getvoice" tabindex="-1"><a class="header-anchor" href="#getvoice" aria-hidden="true">#</a> getVoice</h3><ul><li><p>参数列表</p><ol><li><code>text</code> (string): 朗读的文本</li><li><code>callback</code> (Function): 回调方法，需要在获取到朗读语音数据后，将数据作为该函数变量的参数运行</li><li><code>onCancel</code> (Function(Function)): 取消事件监听器，在当前朗读语音数据未接收完毕且又有新的朗读项时，会触发您传入参数列表的取消回调函数，用以取消当前语音数据的请求事件</li></ol></li><li><p>返回值</p><p>空</p></li><li><p>例子</p><p>getVoice配置</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token function-variable function">getVoice</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> onCancel</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">let</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token comment">// 接口地址，此处以我们提供的服务端代码所构造的路径地址举例</span>
			xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;//...:3000/tts.mp3?text=&quot;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
			xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">&quot;arraybuffer&quot;</span>
			xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token function">callback</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			
			<span class="token function">onCancel</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				xhr<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">...</span>		
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用阿里云文字转语音接口的Node.js服务端例子</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	  RPCClient <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@alicloud/pop-core&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>RPCClient<span class="token punctuation">,</span>
	  express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	  app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	  port <span class="token operator">=</span> <span class="token number">3000</span><span class="token punctuation">,</span>
	  appKey <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
	  Referer <span class="token operator">=</span> <span class="token comment">//;</span>

<span class="token keyword">var</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RPCClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">accessKeyId</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">accessKeySecret</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">endpoint</span><span class="token operator">:</span> <span class="token string">&#39;http://nls-meta.cn-shanghai.aliyuncs.com&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">apiVersion</span><span class="token operator">:</span> <span class="token string">&#39;2019-02-28&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> token<span class="token punctuation">;</span>
<span class="token function">updateToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">updateToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> client<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string">&#39;CreateToken&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		token <span class="token operator">=</span> result<span class="token punctuation">.</span>Token<span class="token punctuation">.</span>Id<span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">processPOSTRequest</span><span class="token punctuation">(</span><span class="token parameter">appkeyValue<span class="token punctuation">,</span> tokenValue<span class="token punctuation">,</span> textValue<span class="token punctuation">,</span> formatValue<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> times <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&#39;https://nls-gateway-cn-shanghai.aliyuncs.com/stream/v1/tts&#39;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 请求参数，以JSON格式字符串填入HTTPS POST请求的Body中。
    */</span>
    <span class="token keyword">var</span> task <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">appkey</span> <span class="token operator">:</span> appkeyValue<span class="token punctuation">,</span>
        <span class="token literal-property property">token</span> <span class="token operator">:</span> tokenValue<span class="token punctuation">,</span>
        <span class="token literal-property property">text</span> <span class="token operator">:</span> textValue<span class="token punctuation">,</span>
        <span class="token literal-property property">format</span> <span class="token operator">:</span> formatValue
        <span class="token comment">// voice 发音人，可选，默认是xiaoyun。</span>
        <span class="token comment">// voice : &#39;xiaoyun&#39;,</span>
        <span class="token comment">// volume 音量，范围是0~100，可选，默认50。</span>
        <span class="token comment">// volume : 50,</span>
        <span class="token comment">// speech_rate 语速，范围是-500~500，可选，默认是0。</span>
        <span class="token comment">// speech_rate : 0,</span>
        <span class="token comment">// pitch_rate 语调，范围是-500~500，可选，默认是0。</span>
        <span class="token comment">// pitch_rate : 0</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> bodyContent <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 设置HTTPS POST请求头部。
     */</span>
    <span class="token keyword">var</span> httpHeaders <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * 设置HTTPS POST请求。
     * encoding必须设置为null，HTTPS响应的Body为二进制Buffer类型。
     */</span>
    <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> httpHeaders<span class="token punctuation">,</span>
        <span class="token literal-property property">body</span><span class="token operator">:</span> bodyContent<span class="token punctuation">,</span>
        <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
	
    <span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> response<span class="token punctuation">,</span> body</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> content<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;application/json&quot;</span> <span class="token operator">&amp;&amp;</span> 
			<span class="token punctuation">(</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> 
			times <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> content<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">40000001</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token operator">++</span>times<span class="token punctuation">;</span>
			<span class="token function">updateToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">processPOSTRequest</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span>
			<span class="token function">callback</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/tts.mp3&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> params <span class="token operator">=</span> req<span class="token punctuation">.</span>query
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> Referer<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;referer&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">403</span><span class="token punctuation">)</span>
		   <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			   <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
			   <span class="token string-property property">&quot;Access-Control-Allow-Origin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*&quot;</span>
		   <span class="token punctuation">}</span><span class="token punctuation">)</span>
		   <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
				<span class="token literal-property property">result</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
				<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">403</span><span class="token punctuation">,</span>
				<span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Gateway:DIRECTIVE_INVALID:Forbidden&quot;</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token function">processPOSTRequest</span><span class="token punctuation">(</span>appKey<span class="token punctuation">,</span> token<span class="token punctuation">,</span> params<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">&quot;mp3&quot;</span><span class="token punctuation">,</span> <span class="token parameter">r</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>statusCode<span class="token punctuation">)</span>
		   <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>
		   <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>
		   
		<span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>statusCode <span class="token operator">/</span> <span class="token number">100</span> <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span>
		   res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;Cache-Control&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;max-age=31536000&quot;</span><span class="token punctuation">)</span>
		  
		res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>body<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><p>  您可以通过运行<code>Novae.accessibility.open</code>方法，开启无障碍工具栏。按钮可采用我们提供的矢量无障碍标识，并进一步使用CSS代码或其他方式美化，调用方法如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header-accessibility-icon novae-icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#icon-wuzhangai<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>  开启工具栏后会将您在<code>Novae.init</code>方法中配置的根元素DOM作为基准元素，悬浮在根元素DOM上方并不遮挡根元素内容，同样辅屏开启后悬浮在视窗底部的行为也不会遮挡您页脚的内容，我们的框架已留出对应的偏移量。</p>`,9);function y(g,h){const a=p("RouterLink");return e(),o("div",null,[r,k,n("p",null,[s("  无障碍及适老化改造功能默认关闭，开启需要从"),c(a,{to:"/documents/novae.html#init"},{default:l(()=>[d]),_:1}),s("方法传入"),v,s("项。 如使用导读功能还需配置朗读接口"),m,s("项。")]),b])}const q=t(u,[["render",y],["__file","accessibility.html.vue"]]);export{q as default};
