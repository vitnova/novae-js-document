import{_ as p,r as t,o as e,a as o,d as n,e as c,w as l,F as u,b as s,c as r}from"./app.0b2a4b81.js";const i={},k=n("h1",{id:"\u65E0\u969C\u788D\u53CA\u9002\u8001\u5316\u6539\u9020",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u65E0\u969C\u788D\u53CA\u9002\u8001\u5316\u6539\u9020","aria-hidden":"true"},"#"),s(" \u65E0\u969C\u788D\u53CA\u9002\u8001\u5316\u6539\u9020")],-1),b=n("h2",{id:"\u5F00\u542F\u65B9\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5F00\u542F\u65B9\u6CD5","aria-hidden":"true"},"#"),s(" \u5F00\u542F\u65B9\u6CD5")],-1),m=s("\u2003\u2003\u65E0\u969C\u788D\u53CA\u9002\u8001\u5316\u6539\u9020\u529F\u80FD\u9ED8\u8BA4\u5173\u95ED\uFF0C\u5F00\u542F\u9700\u8981\u4ECE"),d=n("code",null,"Novae.init",-1),y=s("\u65B9\u6CD5\u4F20\u5165"),g=n("code",null,"accessibility: true",-1),h=s("\u9879\u3002 \u5982\u4F7F\u7528\u5BFC\u8BFB\u529F\u80FD\u8FD8\u9700\u914D\u7F6E\u6717\u8BFB\u63A5\u53E3"),f=n("a",{href:"#getvoice"},[n("code",null,"getVoice")],-1),q=s("\u9879\u3002"),v=r(`<h3 id="getvoice" tabindex="-1"><a class="header-anchor" href="#getvoice" aria-hidden="true">#</a> getVoice</h3><ul><li><p>\u53C2\u6570\u5217\u8868</p><ol><li><code>text</code> (string): \u6717\u8BFB\u7684\u6587\u672C</li><li><code>callback</code> (Function): \u83B7\u53D6\u7684</li></ol></li><li><p>\u8FD4\u56DE\u503C</p><p>\u7A7A</p></li><li><p>\u4F8B\u5B50</p><p>getVoice\u914D\u7F6E</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token function-variable function">getVoice</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">let</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token comment">// \u63A5\u53E3\u5730\u5740\uFF0C\u6B64\u5904\u4EE5\u6211\u4EEC\u63D0\u4F9B\u7684\u670D\u52A1\u7AEF\u4EE3\u7801\u6240\u6784\u9020\u7684\u8DEF\u5F84\u5730\u5740\u4E3E\u4F8B</span>
			xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;//...:3000/tts.mp3?text=&quot;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
			xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">&quot;arraybuffer&quot;</span>
			xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token function">callback</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">...</span>		
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u4F7F\u7528\u963F\u91CC\u4E91\u6587\u5B57\u8F6C\u8BED\u97F3\u63A5\u53E3\u7684Node.js\u670D\u52A1\u7AEF\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	  RPCClient <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@alicloud/pop-core&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>RPCClient<span class="token punctuation">,</span>
	  express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	  app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	  port <span class="token operator">=</span> <span class="token number">3000</span><span class="token punctuation">,</span>
	  appKey <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
	  Referer <span class="token operator">=</span> <span class="token comment">//;</span>

<span class="token keyword">var</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RPCClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">accessKeyId</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">accessKeySecret</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">endpoint</span><span class="token operator">:</span> <span class="token string">&#39;http://nls-meta.cn-shanghai.aliyuncs.com&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">apiVersion</span><span class="token operator">:</span> <span class="token string">&#39;2019-02-28&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> token<span class="token punctuation">;</span>
<span class="token function">updateToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">updateToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> client<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string">&#39;CreateToken&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		token <span class="token operator">=</span> result<span class="token punctuation">.</span>Token<span class="token punctuation">.</span>Id<span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">processPOSTRequest</span><span class="token punctuation">(</span><span class="token parameter">appkeyValue<span class="token punctuation">,</span> tokenValue<span class="token punctuation">,</span> textValue<span class="token punctuation">,</span> formatValue<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> times <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&#39;https://nls-gateway-cn-shanghai.aliyuncs.com/stream/v1/tts&#39;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * \u8BF7\u6C42\u53C2\u6570\uFF0C\u4EE5JSON\u683C\u5F0F\u5B57\u7B26\u4E32\u586B\u5165HTTPS POST\u8BF7\u6C42\u7684Body\u4E2D\u3002
    */</span>
    <span class="token keyword">var</span> task <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">appkey</span> <span class="token operator">:</span> appkeyValue<span class="token punctuation">,</span>
        <span class="token literal-property property">token</span> <span class="token operator">:</span> tokenValue<span class="token punctuation">,</span>
        <span class="token literal-property property">text</span> <span class="token operator">:</span> textValue<span class="token punctuation">,</span>
        <span class="token literal-property property">format</span> <span class="token operator">:</span> formatValue
        <span class="token comment">// voice \u53D1\u97F3\u4EBA\uFF0C\u53EF\u9009\uFF0C\u9ED8\u8BA4\u662Fxiaoyun\u3002</span>
        <span class="token comment">// voice : &#39;xiaoyun&#39;,</span>
        <span class="token comment">// volume \u97F3\u91CF\uFF0C\u8303\u56F4\u662F0~100\uFF0C\u53EF\u9009\uFF0C\u9ED8\u8BA450\u3002</span>
        <span class="token comment">// volume : 50,</span>
        <span class="token comment">// speech_rate \u8BED\u901F\uFF0C\u8303\u56F4\u662F-500~500\uFF0C\u53EF\u9009\uFF0C\u9ED8\u8BA4\u662F0\u3002</span>
        <span class="token comment">// speech_rate : 0,</span>
        <span class="token comment">// pitch_rate \u8BED\u8C03\uFF0C\u8303\u56F4\u662F-500~500\uFF0C\u53EF\u9009\uFF0C\u9ED8\u8BA4\u662F0\u3002</span>
        <span class="token comment">// pitch_rate : 0</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> bodyContent <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * \u8BBE\u7F6EHTTPS POST\u8BF7\u6C42\u5934\u90E8\u3002
     */</span>
    <span class="token keyword">var</span> httpHeaders <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * \u8BBE\u7F6EHTTPS POST\u8BF7\u6C42\u3002
     * encoding\u5FC5\u987B\u8BBE\u7F6E\u4E3Anull\uFF0CHTTPS\u54CD\u5E94\u7684Body\u4E3A\u4E8C\u8FDB\u5236Buffer\u7C7B\u578B\u3002
     */</span>
    <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> httpHeaders<span class="token punctuation">,</span>
        <span class="token literal-property property">body</span><span class="token operator">:</span> bodyContent<span class="token punctuation">,</span>
        <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
	
    <span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> response<span class="token punctuation">,</span> body</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> content<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;application/json&quot;</span> <span class="token operator">&amp;&amp;</span> 
			<span class="token punctuation">(</span>content <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> 
			times <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> content<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">40000001</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token operator">++</span>times<span class="token punctuation">;</span>
			<span class="token function">updateToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">processPOSTRequest</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span>
			<span class="token function">callback</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/tts.mp3&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> params <span class="token operator">=</span> req<span class="token punctuation">.</span>query
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> Referer<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;referer&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">403</span><span class="token punctuation">)</span>
		   <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			   <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
			   <span class="token string-property property">&quot;Access-Control-Allow-Origin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*&quot;</span>
		   <span class="token punctuation">}</span><span class="token punctuation">)</span>
		   <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
				<span class="token literal-property property">result</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
				<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">403</span><span class="token punctuation">,</span>
				<span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Gateway:DIRECTIVE_INVALID:Forbidden&quot;</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token function">processPOSTRequest</span><span class="token punctuation">(</span>appKey<span class="token punctuation">,</span> token<span class="token punctuation">,</span> params<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">&quot;mp3&quot;</span><span class="token punctuation">,</span> <span class="token parameter">r</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>statusCode<span class="token punctuation">)</span>
		   <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>
		   <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>
		   
		<span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>statusCode <span class="token operator">/</span> <span class="token number">100</span> <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span>
		   res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;Cache-Control&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;max-age=31536000&quot;</span><span class="token punctuation">)</span>
		  
		res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>body<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span>	
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br></div></div><h2 id="\u4F7F\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u65B9\u6CD5" aria-hidden="true">#</a> \u4F7F\u7528\u65B9\u6CD5</h2><p>\u2003\u2003\u60A8\u53EF\u4EE5\u901A\u8FC7\u8FD0\u884C<code>Novae.accessibility.open</code>\u65B9\u6CD5\uFF0C\u5F00\u542F\u65E0\u969C\u788D\u5DE5\u5177\u680F\u3002\u6309\u94AE\u53EF\u91C7\u7528\u6211\u4EEC\u63D0\u4F9B\u7684\u77E2\u91CF\u65E0\u969C\u788D\u6807\u8BC6\uFF0C\u5E76\u8FDB\u4E00\u6B65\u4F7F\u7528CSS\u4EE3\u7801\u6216\u5176\u4ED6\u65B9\u5F0F\u7F8E\u5316\uFF0C\u8C03\u7528\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header-accessibility-icon novae-icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#icon-wuzhangai<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u2003\u2003\u5F00\u542F\u5DE5\u5177\u680F\u540E\u4F1A\u5C06\u60A8\u5728<code>Novae.init</code>\u65B9\u6CD5\u4E2D\u914D\u7F6E\u7684\u6839\u5143\u7D20DOM\u4F5C\u4E3A\u57FA\u51C6\u5143\u7D20\uFF0C\u60AC\u6D6E\u5728\u6839\u5143\u7D20DOM\u4E0A\u65B9\u5E76\u4E0D\u906E\u6321\u6839\u5143\u7D20\u5185\u5BB9\uFF0C\u540C\u6837\u8F85\u5C4F\u5F00\u542F\u540E\u60AC\u6D6E\u5728\u89C6\u7A97\u5E95\u90E8\u7684\u884C\u4E3A\u4E5F\u4E0D\u4F1A\u906E\u6321\u60A8\u9875\u811A\u7684\u5185\u5BB9\uFF0C\u6211\u4EEC\u7684\u6846\u67B6\u5DF2\u7559\u51FA\u5BF9\u5E94\u7684\u504F\u79FB\u91CF\u3002</p>`,9);function _(x,w){const a=t("RouterLink");return e(),o(u,null,[k,b,n("p",null,[m,c(a,{to:"/documents/novae.html#init"},{default:l(()=>[d]),_:1}),y,g,h,f,q]),v],64)}var C=p(i,[["render",_],["__file","accessibility.html.vue"]]);export{C as default};
